{"version":3,"sources":["components/Header/Header.js","components/Suggestion/Suggestion.js","components/SearchField/SearchField.js","images/plus_sign.svg","images/ok-sign.svg","components/SearchResult/SearchResult.js","images/arrow-up.svg","images/arrow-down.svg","components/SavedResult/SavedResult.js","components/Main/Main.js","components/App/App.js","index.js"],"names":["Header","className","href","target","rel","Suggestion","data","setResult","setIsInputFocused","onClick","value","inn","address","region_with_type","SearchField","fetchSuggestions","suggestions","isInputFocused","keywordRef","React","useRef","handleInput","debounce","current","useState","suggestionIndex","setSuggestionIndex","placeholder","type","ref","onChange","maxLength","autoComplete","id","onKeyDown","evt","key","preventDefault","length","newSuggestionIndex","document","getElementsByClassName","classList","toggle","slice","map","suggestion","i","SearchResult","result","setSavedResults","savedResults","isResultSaved","setIsResultSaved","useEffect","org","unrestricted_value","management","post","charAt","toLowerCase","opf","full","name","src","okIcon","alt","localStorage","removeItem","setItem","JSON","stringify","kpp","ogrn","SavedResult","areDetailsOpen","setAreDetailsOpen","handleOpenDetails","savedResult","filter","newSavedResults","arrowUp","arrowDown","Main","setSuggestions","exact","to","activeClassName","window","location","pathname","path","obj","hasOwnProperty","isEmpty","plusSign","withRouter","evtLstn","contains","parentElement","getElementById","addEventListener","removeEventListener","getItem","parse","isRouteSaved","query","options","method","mode","headers","body","fetch","then","res","ok","json","Promise","reject","status","statusText","catch","error","console","log","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.78bef7cd.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Header.css';\n\nexport default function Header() {\n  return (\n    <header className=\"header\">\n      <a href=\"https://autopiter.ru/\"\n         className=\"header__logo\"\n         target=\"_blank\"\n         rel=\"noreferrer\"\n      />\n    </header>\n  )\n}\n","import React from \"react\";\n\nimport './Suggestion.css';\n\nexport default function Suggestion({ data, setResult, setIsInputFocused }) {\n  const handleSelect = () => {\n    setResult(data);\n    setIsInputFocused(false);\n  }\n\n  return (\n    <div className=\"suggestion\" onClick={handleSelect}>\n      <h3 className=\"suggestion__name\">{data.value}</h3>\n      <p className=\"suggestion__info\">\n        {data.data.inn} {data.data.address.data.region_with_type}\n      </p>\n    </div>\n  )\n}\n","import React from \"react\";\nimport debounce from 'lodash.debounce';\n\nimport './SearchField.css';\nimport Suggestion from \"../Suggestion/Suggestion\";\n\nexport default function SearchField({ fetchSuggestions, suggestions,\n                                      setResult, isInputFocused,\n                                      setIsInputFocused })\n{\n  // реф введенного в инпут слова\n  const keywordRef = React.useRef();\n\n  // запрос к API подсказок с установленной задержкой\n  const handleInput = debounce(() => fetchSuggestions(keywordRef.current.value), 200)\n\n  // стейт индекса текущей, выбранной подсказки в массиве всех Подсказок\n  const [suggestionIndex, setSuggestionIndex] = React.useState(-1);\n\n  // хэндлер выбора подсказок при помощи клавиатуры\n  const handleKeyboard = (evt) => {\n    setIsInputFocused(true);\n    if (evt.key === 'ArrowDown') {\n      evt.preventDefault();\n      if (suggestions.length > 0\n          && isInputFocused\n          && suggestionIndex < 4)\n      {\n        const newSuggestionIndex = suggestionIndex + 1;\n        if (newSuggestionIndex > 0) {\n          document.getElementsByClassName('suggestion')[newSuggestionIndex - 1]\n            .classList.toggle('suggestion_hover');\n          document.getElementsByClassName('suggestion')[newSuggestionIndex]\n            .classList.toggle('suggestion_hover');\n          setSuggestionIndex(newSuggestionIndex);\n        } else {\n          document.getElementsByClassName('suggestion')[newSuggestionIndex]\n            .classList.toggle('suggestion_hover');\n          setSuggestionIndex(newSuggestionIndex);\n        }\n      }\n    }\n\n    if (evt.key === 'ArrowUp') {\n      evt.preventDefault();\n      if (suggestions.length > 0\n        && isInputFocused\n        && suggestionIndex > 0)\n      {\n        const newSuggestionIndex = suggestionIndex - 1;\n        if (newSuggestionIndex < 4) {\n          document.getElementsByClassName('suggestion')[newSuggestionIndex + 1]\n            .classList.toggle('suggestion_hover');\n          document.getElementsByClassName('suggestion')[newSuggestionIndex]\n            .classList.toggle('suggestion_hover');\n          setSuggestionIndex(newSuggestionIndex);\n        } else {\n          document.getElementsByClassName('suggestion')[newSuggestionIndex]\n            .classList.toggle('suggestion_hover');\n          setSuggestionIndex(newSuggestionIndex);\n        }\n      }\n    }\n\n    if (evt.key === 'Enter') {\n      evt.preventDefault();\n      if (suggestionIndex >= 0 && suggestionIndex <= 4) {\n        setResult(suggestions[suggestionIndex]);\n        setIsInputFocused(false);\n        setSuggestionIndex(-1);\n      }\n    }\n  }\n\n  return (\n    <>\n      <input className=\"orgs__search\"\n             placeholder=\"Введите название, ИНН или адрес организации\"\n             type=\"text\"\n             ref={keywordRef}\n             onChange={handleInput}\n             maxLength=\"300\"\n             autoComplete=\"off\"\n             id=\"input\"\n             onKeyDown={handleKeyboard}\n      />\n      {\n        suggestions.length > 0 && isInputFocused &&\n        <div className=\"orgs__suggestions\">\n          {suggestions.slice(0, 5).map((suggestion, i) => (\n            <Suggestion data={suggestion}\n                        key={i}\n                        setResult={setResult}\n                        setIsInputFocused={setIsInputFocused}\n            />\n          ))}\n        </div>\n      }\n    </>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/plus_sign.d5763053.svg\";","export default __webpack_public_path__ + \"static/media/ok-sign.e7e20d18.svg\";","import React from \"react\";\n\nimport './SearchResult.css';\nimport okIcon from '../../images/ok-sign.svg';\n\nexport default function SearchResult({ result, setSavedResults, savedResults }) {\n  const [isResultSaved, setIsResultSaved] = React.useState(false);\n\n  React.useEffect(() => {\n    setIsResultSaved(false);\n    savedResults.map((org) => org.data.inn === result.data.inn && setIsResultSaved(true));\n  }, [])\n\n  function handleSaveResult() {\n    setSavedResults([...savedResults, result]);\n    localStorage.removeItem('saved');\n    localStorage.setItem('saved', JSON.stringify([...savedResults, result]));\n    setIsResultSaved(true);\n  }\n\n  return (\n    <div className=\"orgs__result\">\n      <h2 className=\"result__name\">{result.value}</h2>\n\n      <div className=\"result__container\">\n        <div className=\"result__data-container\">\n          <div className=\"result__data\">\n            <h3 className=\"result__data-title\">Юридический адрес</h3>\n            <p className=\"result__data-value\">{result.data.address.unrestricted_value}</p>\n          </div>\n\n          <div className=\"result__data\">\n            <h3 className=\"result__data-title\">\n              {\n                // проверка на ИП, т.к. у них в объекте нет 'management' свойства\n                result.data.type !== 'INDIVIDUAL'\n                  ? result.data.management.post.charAt(0)\n                  + result.data.management.post.slice(1).toLowerCase()\n                  : result.data.opf.full\n              }\n            </h3>\n            <p className=\"result__data-value\">\n              { result.data.type !== 'INDIVIDUAL'\n                ? result.data.management.name\n                : result.data.name.full\n              }\n            </p>\n          </div>\n\n          {\n            !isResultSaved\n              ? <button type=\"button\"\n                        className=\"result__save-btn\"\n                        onClick={handleSaveResult}>Сохранить</button>\n              : <button type=\"button\"\n                        className=\"result__save-btn result__save-btn_saved\">\n                  <img src={okIcon} alt=\"Сохранено\"/> Сохранено</button>\n          }\n        </div>\n\n        <div className=\"result__numbers\">\n          <p className=\"result__number\">\n            <span className=\"result__number result__number_span\">ИНН</span>\n            {result.data.inn}\n          </p>\n          {\n            // проверка на присутствие свойства kpp, т.к. не у всех\n            // организаций есть КПП\n            result.data.kpp &&\n            <p className=\"result__number\">\n              <span className=\"result__number result__number_span\">КПП</span>\n              {result.data.kpp}\n            </p>\n          }\n          <p className=\"result__number\">\n            <span className=\"result__number result__number_span\">ОГРН</span>\n            {result.data.ogrn}\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/arrow-up.cd00e8cb.svg\";","export default __webpack_public_path__ + \"static/media/arrow-down.464346d5.svg\";","import React from \"react\";\n\nimport './SavedResult.css';\nimport arrowUp from '../../images/arrow-up.svg';\nimport arrowDown from '../../images/arrow-down.svg';\n\nexport default function SavedResult({ org, setSavedResults, savedResults }) {\n  const [areDetailsOpen, setAreDetailsOpen] = React.useState(false);\n\n  // удаление организации из Сохраненных\n  function handleDeleteResult() {\n    setSavedResults((savedResult) => savedResult.filter((data) => data.data.inn !== org.data.inn))\n    const newSavedResults = savedResults.filter((data) => data.data.inn !== org.data.inn)\n    localStorage.setItem('saved', JSON.stringify(newSavedResults));\n  }\n\n  function handleOpenDetails() {\n    setAreDetailsOpen(!areDetailsOpen);\n  }\n\n  return (\n    <div className=\"saved-result\">\n      <h3 className=\"saved-result__name\">{org.value}</h3>\n      <div className=\"saved-result__data-container\">\n        <p className=\"saved-result__data\">\n          <span className=\"saved-result__data_span\">ИНН</span>\n          {org.data.inn}\n        </p>\n        {\n          areDetailsOpen &&\n          (\n            <>\n              {\n                // проверка на присутствие свойства kpp, т.к. не у всех\n                // организаций есть КПП\n                org.data.kpp &&\n                <p className=\"saved-result__data\">\n                  <span className=\"saved-result__data_span\">КПП</span>\n                  {org.data.kpp}\n                </p>\n              }\n              <p className=\"saved-result__data\">\n                <span className=\"saved-result__data_span\">ОГРН</span>\n                {org.data.ogrn}\n              </p>\n              <p className=\"saved-result__data\">\n                <span className=\"saved-result__data_span\">Юридический адрес</span>\n                {org.data.address.unrestricted_value}\n              </p>\n              <p className=\"saved-result__data\">\n                <span className=\"saved-result__data_span\">\n                  {\n                    // проверка на ИП, т.к. у них в объекте нет 'management' свойства\n                    org.data.type !== 'INDIVIDUAL'\n                      ? org.data.management.post.charAt(0)\n                      + org.data.management.post.slice(1).toLowerCase()\n                      : org.data.opf.full\n                  }\n                </span>\n                { org.data.type !== 'INDIVIDUAL'\n                  ? org.data.management.name\n                  : org.data.name.full\n                }\n              </p>\n            </>\n          )\n        }\n      </div>\n      <button type=\"button\"\n              className=\"saved-result__delete-btn\"\n              onClick={handleDeleteResult}/>\n      {!areDetailsOpen\n        ? (<button type=\"button\"\n                   className=\"saved-result__details-btn\"\n                   onClick={handleOpenDetails}>\n            подробнее<img src={arrowDown}\n                          alt=\"подробнее\"\n                          className=\"saved-result__details-icon\"/>\n          </button>)\n        : (<button type=\"button\"\n                   className=\"saved-result__details-btn\"\n                   onClick={handleOpenDetails}>\n            скрыть подробности<img src={arrowUp}\n                                   alt=\"скрыть подробности\"\n                                   className=\"saved-result__details-icon\"/>\n          </button>)\n      }\n    </div>\n  )\n}\n","import React from \"react\";\nimport { Switch, Route, NavLink } from 'react-router-dom';\n\nimport './Main.css';\nimport SearchField from \"../SearchField/SearchField\";\nimport plusSign from \"../../images/plus_sign.svg\";\nimport SearchResult from \"../SearchResult/SearchResult\";\nimport SavedResult from \"../SavedResult/SavedResult\";\n\nexport default function Main({ fetchSuggestions, result, suggestions,\n                               setResult, setSuggestions, setIsInputFocused,\n                               isInputFocused, setSavedResults, savedResults })\n{\n  // вспомогательная функция для проверки объекта на \"пустоту\"\n  function isEmpty(obj) {\n    for(var key in obj) {\n      if(obj.hasOwnProperty(key))\n        return false;\n    }\n    return true;\n  }\n\n  // \"отчистка\" страницы при переходе на нее обратно с '/saved'\n  const handleClearPage = () => {\n    window.location.pathname !== '/' && setResult({});\n    setSuggestions([]);\n  }\n\n  return (\n    <main className=\"main\">\n      <h1 className=\"main__title\">Мои организации</h1>\n\n      <section className=\"main__container\">\n        <nav className=\"navigation\">\n          <NavLink exact to=\"/\"\n                   className=\"navigation__link\"\n                   activeClassName=\"navigation__link navigation__link_active\"\n                   onClick={handleClearPage}\n          >Новая организация</NavLink>\n\n          <NavLink to=\"/saved\"\n                   className=\"navigation__link\"\n                   activeClassName=\"navigation__link navigation__link_active\"\n          >Сохраненные организации ({savedResults.length})</NavLink>\n        </nav>\n          <Switch>\n            <Route exact path=\"/\">\n              <div className=\"orgs\">\n                <h3 className=\"orgs__title\">Организация или ИП</h3>\n                <SearchField fetchSuggestions={fetchSuggestions}\n                             suggestions={suggestions}\n                             setResult={setResult}\n                             setIsInputFocused={setIsInputFocused}\n                             isInputFocused={isInputFocused}\n                />\n                {\n                  // проверка для определения отрисовки результата\n                  // или его отсутствия\n                  isEmpty(result) ? (\n                    <div className=\"orgs__no-results\">\n                      <img src={plusSign}\n                           alt=\"Добавление новой организации\"\n                           className=\"orgs__add-org-icon\"/>\n                      <p className=\"orgs__add-org-text\">\n                        Для добавления новой организации введите ее\n                        название, ИНН или адрес.\n                      </p>\n                    </div>\n                  ) : (\n                    <SearchResult result={result}\n                                  setSavedResults={setSavedResults}\n                                  savedResults={savedResults}\n                    />\n                  )\n                }\n              </div>\n            </Route>\n\n            <Route path=\"/saved\">\n              <div className=\"orgs\">\n                {\n                  savedResults.map((org, i) => (\n                    <SavedResult org={org}\n                                 key={i}\n                                 setSavedResults={setSavedResults}\n                                 savedResults={savedResults}\n                    />\n                  ))\n                }\n              </div>\n            </Route>\n          </Switch>\n      </section>\n    </main>\n  )\n}\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport './App.css';\nimport Header from \"../Header/Header\";\nimport Main from \"../Main/Main\";\n\nfunction App() {\n  const [result, setResult] = React.useState({});\n  const [suggestions, setSuggestions] = React.useState([]);\n  const [isInputFocused, setIsInputFocused] = React.useState(false);\n  const [savedResults, setSavedResults] = React.useState([]);\n\n  const fetchSuggestions = (query) => {\n    const url = \"https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/party\";\n    const token = \"2a20a4f21d4938545a386b96e095f8a2c7eb272a\";\n\n    const options = {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        \"Authorization\": \"Token \" + token\n      },\n      body: JSON.stringify({ query: query })\n    }\n\n    fetch(url, options)\n      .then(res => {\n        if (res.ok) {\n          return res.json()\n        } else {\n          return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\n        }\n      })\n      .then(res => setSuggestions(res.suggestions))\n      .catch(error => console.log(\"error\", error));\n\n  }\n\n  // проверка для фокусировки/блюра инпута и тем самым\n  // показа/скрытия \"подсказок\"\n  React.useEffect(() => {\n    const evtLstn = (evt) => {\n      if (evt.target.classList.contains('orgs__search')\n        || evt.target.classList.contains('suggestion')\n        || evt.target.parentElement.classList.contains('suggestion'))\n      {\n        setIsInputFocused(true);\n      } else {\n        setIsInputFocused(false);\n      }\n    }\n    document.getElementById('app').addEventListener('click', evtLstn);\n    return () => document.getElementById('app').removeEventListener('click', evtLstn);\n  }, [isInputFocused])\n\n  React.useEffect(() => {\n    localStorage.getItem('saved') && setSavedResults(JSON.parse(localStorage.getItem('saved')));\n  }, [])\n\n  return (\n    <div className=\"app\" id=\"app\">\n      <Header/>\n      <Main isRouteSaved={false}\n            savedResults={savedResults}\n            setSavedResults={setSavedResults}\n            fetchSuggestions={fetchSuggestions}\n            result={result}\n            setResult={setResult}\n            suggestions={suggestions}\n            setSuggestions={setSuggestions}\n            isInputFocused={isInputFocused}\n            setIsInputFocused={setIsInputFocused}\n      />\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}