{"version":3,"sources":["components/Header/Header.js","components/NavBar/NavBar.js","components/Suggestion/Suggestion.js","components/SearchField/SearchField.js","images/plus_sign.svg","images/ok-sign.svg","components/SearchResult/SearchResult.js","pages/NewOrgPage.js","images/arrow-up.svg","images/arrow-down.svg","components/SavedResult/SavedResult.js","pages/SavedOrgsPage.js","App.js","index.js"],"names":["Header","className","href","target","rel","NavBar","setResult","setSuggestions","savedResults","exact","to","activeClassName","onClick","window","location","pathname","length","Suggestion","data","setIsInputFocused","value","inn","address","region_with_type","SearchField","fetchSuggestions","suggestions","isInputFocused","keywordRef","React","useRef","handleInput","debounce","current","useState","suggestionIndex","setSuggestionIndex","placeholder","type","ref","onChange","maxLength","autoComplete","id","onKeyDown","evt","key","preventDefault","newSuggestionIndex","document","getElementsByClassName","classList","toggle","slice","map","suggestion","i","SearchResult","result","setSavedResults","isResultSaved","setIsResultSaved","useEffect","org","unrestricted_value","management","post","charAt","toLowerCase","opf","full","name","src","okIcon","alt","localStorage","removeItem","setItem","JSON","stringify","kpp","ogrn","NewOrgPage","htmlFor","obj","hasOwnProperty","isEmpty","plusSign","SavedResult","areDetailsOpen","setAreDetailsOpen","handleOpenDetails","savedResult","filter","newSavedResults","arrowUp","arrowDown","SavedOrgsPage","withRouter","evtLstn","contains","parentElement","getElementById","addEventListener","removeEventListener","getItem","parse","path","query","options","method","mode","headers","body","fetch","then","res","ok","json","Promise","reject","status","statusText","catch","error","console","log","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.789cfa5e.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Header.css';\n\nexport default function Header() {\n  return (\n    <header className=\"header\">\n      <a href=\"https://autopiter.ru/\"\n         className=\"header__logo\"\n         target=\"_blank\"\n         rel=\"noreferrer\"\n      />\n    </header>\n  )\n}\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nimport './NavBar.css';\n\nexport default function NavBar({ setResult, setSuggestions, savedResults }) {\n  // \"отчистка\" страницы при переходе на нее обратно с '/saved'\n  const handleClearPage = () => {\n    window.location.pathname !== '/' && setResult({});\n    setSuggestions([]);\n  }\n\n  return (\n    <nav className=\"navigation\">\n      <NavLink exact to=\"/\"\n               className=\"navigation__link\"\n               activeClassName=\"navigation__link navigation__link_active\"\n               onClick={handleClearPage}\n      >Новая организация</NavLink>\n\n      <NavLink to=\"/saved\"\n               className=\"navigation__link\"\n               activeClassName=\"navigation__link navigation__link_active\"\n      >Сохраненные организации ({savedResults.length})</NavLink>\n    </nav>\n  )\n}\n","import React from \"react\";\n\nimport './Suggestion.css';\n\nexport default function Suggestion({ data, setResult, setIsInputFocused }) {\n  const handleSelect = () => {\n    setResult(data);\n    setIsInputFocused(false);\n  }\n\n  return (\n    <div className=\"suggestion\" onClick={handleSelect}>\n      <h3 className=\"suggestion__name\">{data.value}</h3>\n      <p className=\"suggestion__info\">\n        {data.data.inn} {data.data.address.data.region_with_type}\n      </p>\n    </div>\n  )\n}\n","import React from \"react\";\nimport debounce from 'lodash.debounce';\n\nimport './SearchField.css';\nimport Suggestion from \"../Suggestion/Suggestion\";\n\nexport default function SearchField({ fetchSuggestions, suggestions,\n                                      setResult, isInputFocused,\n                                      setIsInputFocused })\n{\n  // реф введенного в инпут слова\n  const keywordRef = React.useRef();\n\n  // запрос к API подсказок с установленной задержкой\n  const handleInput = debounce(() => fetchSuggestions(keywordRef.current.value), 200)\n\n  // стейт индекса текущей, выбранной подсказки в массиве всех Подсказок\n  const [suggestionIndex, setSuggestionIndex] = React.useState(-1);\n\n  // хэндлер выбора подсказок при помощи клавиатуры\n  const handleKeyboard = (evt) => {\n    setIsInputFocused(true);\n    if (evt.key === 'ArrowDown') {\n      evt.preventDefault();\n      if (suggestions.length > 0\n          && isInputFocused\n          && suggestionIndex < 4)\n      {\n        const newSuggestionIndex = suggestionIndex + 1;\n        if (newSuggestionIndex > 0) {\n          document.getElementsByClassName('suggestion')[newSuggestionIndex - 1]\n            .classList.toggle('suggestion_hover');\n          document.getElementsByClassName('suggestion')[newSuggestionIndex]\n            .classList.toggle('suggestion_hover');\n          setSuggestionIndex(newSuggestionIndex);\n        } else {\n          document.getElementsByClassName('suggestion')[newSuggestionIndex]\n            .classList.toggle('suggestion_hover');\n          setSuggestionIndex(newSuggestionIndex);\n        }\n      }\n    }\n\n    if (evt.key === 'ArrowUp') {\n      evt.preventDefault();\n      if (suggestions.length > 0\n        && isInputFocused\n        && suggestionIndex > 0)\n      {\n        const newSuggestionIndex = suggestionIndex - 1;\n        if (newSuggestionIndex < 4) {\n          document.getElementsByClassName('suggestion')[newSuggestionIndex + 1]\n            .classList.toggle('suggestion_hover');\n          document.getElementsByClassName('suggestion')[newSuggestionIndex]\n            .classList.toggle('suggestion_hover');\n          setSuggestionIndex(newSuggestionIndex);\n        } else {\n          document.getElementsByClassName('suggestion')[newSuggestionIndex]\n            .classList.toggle('suggestion_hover');\n          setSuggestionIndex(newSuggestionIndex);\n        }\n      }\n    }\n\n    if (evt.key === 'Enter') {\n      evt.preventDefault();\n      if (suggestionIndex >= 0 && suggestionIndex <= 4) {\n        setResult(suggestions[suggestionIndex]);\n        setIsInputFocused(false);\n        setSuggestionIndex(-1);\n      }\n    }\n  }\n\n  return (\n    <>\n      <input className=\"orgs__search\"\n             placeholder=\"Введите название, ИНН или адрес организации\"\n             type=\"text\"\n             ref={keywordRef}\n             onChange={handleInput}\n             maxLength=\"300\"\n             autoComplete=\"off\"\n             id=\"input\"\n             onKeyDown={handleKeyboard}\n      />\n      {\n        suggestions.length > 0 && isInputFocused &&\n        <div className=\"orgs__suggestions\">\n          {suggestions.slice(0, 5).map((suggestion, i) => (\n            <Suggestion data={suggestion}\n                        key={i}\n                        setResult={setResult}\n                        setIsInputFocused={setIsInputFocused}\n            />\n          ))}\n        </div>\n      }\n    </>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/plus_sign.d5763053.svg\";","export default __webpack_public_path__ + \"static/media/ok-sign.e7e20d18.svg\";","import React from \"react\";\n\nimport './SearchResult.css';\nimport okIcon from '../../images/ok-sign.svg';\n\nexport default function SearchResult({ result, setSavedResults, savedResults }) {\n  const [isResultSaved, setIsResultSaved] = React.useState(false);\n\n  // проверка сохранена ли уже эта организация\n  React.useEffect(() => {\n    setIsResultSaved(false);\n    savedResults.map((org) => org.data.inn === result.data.inn && setIsResultSaved(true));\n  }, [])\n\n  function handleSaveResult() {\n    setSavedResults([result, ...savedResults]);\n    localStorage.removeItem('saved');\n    localStorage.setItem('saved', JSON.stringify([result, ...savedResults]));\n    setIsResultSaved(true);\n  }\n\n  return (\n    <div className=\"orgs__result\">\n      <h2 className=\"result__name\">{result.value}</h2>\n\n      <div className=\"result__container\">\n        <div className=\"result__data-container\">\n          <div className=\"result__data\">\n            <h3 className=\"result__data-title\">Юридический адрес</h3>\n            <p className=\"result__data-value\">{result.data.address.unrestricted_value}</p>\n          </div>\n\n          <div className=\"result__data\">\n            <h3 className=\"result__data-title\">\n              {\n                // проверка на ИП, т.к. у них в объекте нет 'management' свойства\n                result.data.type !== 'INDIVIDUAL'\n                  ? result.data.management.post.charAt(0)\n                  + result.data.management.post.slice(1).toLowerCase()\n                  : result.data.opf.full\n              }\n            </h3>\n            <p className=\"result__data-value\">\n              { result.data.type !== 'INDIVIDUAL'\n                ? result.data.management.name\n                : result.data.name.full\n              }\n            </p>\n          </div>\n\n          {\n            !isResultSaved\n              ? <button type=\"button\"\n                        className=\"result__save-btn\"\n                        onClick={handleSaveResult}>Сохранить</button>\n              : <button type=\"button\"\n                        className=\"result__save-btn result__save-btn_saved\">\n                  <img src={okIcon} alt=\"Сохранено\"/> Сохранено</button>\n          }\n        </div>\n\n        <div className=\"result__numbers\">\n          <p className=\"result__number\">\n            <span className=\"result__number result__number_span\">ИНН</span>\n            {result.data.inn}\n          </p>\n          {\n            // проверка на присутствие свойства kpp, т.к. не у всех\n            // организаций есть КПП\n            result.data.kpp &&\n            <p className=\"result__number\">\n              <span className=\"result__number result__number_span\">КПП</span>\n              {result.data.kpp}\n            </p>\n          }\n          <p className=\"result__number\">\n            <span className=\"result__number result__number_span\">ОГРН</span>\n            {result.data.ogrn}\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\n\nimport SearchField from \"../components/SearchField/SearchField\";\nimport plusSign from \"../images/plus_sign.svg\";\nimport SearchResult from \"../components/SearchResult/SearchResult\";\nimport './NewOrgPage.css';\n\nexport default function NewOrgPage({ fetchSuggestions, suggestions, setResult,\n                                     setIsInputFocused, isInputFocused, result,\n                                     setSavedResults, savedResults })\n{\n  // вспомогательная функция для проверки объекта на \"пустоту\"\n  function isEmpty(obj) {\n    for(var key in obj) {\n      if(obj.hasOwnProperty(key))\n        return false;\n    }\n    return true;\n  }\n\n  return (\n    <div className=\"orgs\">\n      <label className=\"orgs__title\" htmlFor=\"input\">Организация или ИП</label>\n      <SearchField fetchSuggestions={fetchSuggestions}\n                   suggestions={suggestions}\n                   setResult={setResult}\n                   setIsInputFocused={setIsInputFocused}\n                   isInputFocused={isInputFocused}\n      />\n      {\n        // проверка для определения отрисовки результата\n        // или его отсутствия\n        isEmpty(result) ? (\n          <div className=\"orgs__no-results\">\n            <img src={plusSign}\n                 alt=\"Добавление новой организации\"\n                 className=\"orgs__add-org-icon\"/>\n            <p className=\"orgs__add-org-text\">\n              Для добавления новой организации введите ее\n              название, ИНН или адрес.\n            </p>\n          </div>\n        ) : (\n          <SearchResult result={result}\n                        setSavedResults={setSavedResults}\n                        savedResults={savedResults}\n          />\n        )\n      }\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/arrow-up.cd00e8cb.svg\";","export default __webpack_public_path__ + \"static/media/arrow-down.464346d5.svg\";","import React from \"react\";\n\nimport './SavedResult.css';\nimport arrowUp from '../../images/arrow-up.svg';\nimport arrowDown from '../../images/arrow-down.svg';\n\nexport default function SavedResult({ org, setSavedResults, savedResults }) {\n  const [areDetailsOpen, setAreDetailsOpen] = React.useState(false);\n\n  // удаление организации из Сохраненных\n  function handleDeleteResult() {\n    setSavedResults((savedResult) => savedResult.filter((data) => data.data.inn !== org.data.inn))\n    const newSavedResults = savedResults.filter((data) => data.data.inn !== org.data.inn)\n    localStorage.setItem('saved', JSON.stringify(newSavedResults));\n  }\n\n  function handleOpenDetails() {\n    setAreDetailsOpen(!areDetailsOpen);\n  }\n\n  return (\n    <div className=\"saved-result\">\n      <h3 className=\"saved-result__name\">{org.value}</h3>\n      <div className=\"saved-result__data-container\">\n        <p className=\"saved-result__data\">\n          <span className=\"saved-result__data_span\">ИНН</span>\n          {org.data.inn}\n        </p>\n        {\n          areDetailsOpen &&\n          (\n            <>\n              {\n                // проверка на присутствие свойства kpp, т.к. не у всех\n                // организаций есть КПП\n                org.data.kpp &&\n                <p className=\"saved-result__data\">\n                  <span className=\"saved-result__data_span\">КПП</span>\n                  {org.data.kpp}\n                </p>\n              }\n              <p className=\"saved-result__data\">\n                <span className=\"saved-result__data_span\">ОГРН</span>\n                {org.data.ogrn}\n              </p>\n              <p className=\"saved-result__data\">\n                <span className=\"saved-result__data_span\">Юридический адрес</span>\n                {org.data.address.unrestricted_value}\n              </p>\n              <p className=\"saved-result__data\">\n                <span className=\"saved-result__data_span\">\n                  {\n                    // проверка на ИП, т.к. у них в объекте нет 'management' свойства\n                    org.data.type !== 'INDIVIDUAL'\n                      ? org.data.management.post.charAt(0)\n                      + org.data.management.post.slice(1).toLowerCase()\n                      : org.data.opf.full\n                  }\n                </span>\n                { org.data.type !== 'INDIVIDUAL'\n                  ? org.data.management.name\n                  : org.data.name.full\n                }\n              </p>\n            </>\n          )\n        }\n      </div>\n      <button type=\"button\"\n              className=\"saved-result__delete-btn\"\n              onClick={handleDeleteResult}/>\n      {!areDetailsOpen\n        ? (<button type=\"button\"\n                   className=\"saved-result__details-btn\"\n                   onClick={handleOpenDetails}>\n            подробнее<img src={arrowDown}\n                          alt=\"подробнее\"\n                          className=\"saved-result__details-icon\"/>\n          </button>)\n        : (<button type=\"button\"\n                   className=\"saved-result__details-btn\"\n                   onClick={handleOpenDetails}>\n            скрыть подробности<img src={arrowUp}\n                                   alt=\"скрыть подробности\"\n                                   className=\"saved-result__details-icon\"/>\n          </button>)\n      }\n    </div>\n  )\n}\n","import React from 'react';\nimport SavedResult from \"../components/SavedResult/SavedResult\";\n\nexport default function SavedOrgsPage({ savedResults, setSavedResults }) {\n  return (\n    <div className=\"orgs\">\n      {\n        savedResults.map((org, i) => (\n          <SavedResult org={org}\n                       key={i}\n                       setSavedResults={setSavedResults}\n                       savedResults={savedResults}\n          />\n        ))\n      }\n    </div>\n  )\n}\n","import React from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\n\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport NewOrgPage from \"./pages/NewOrgPage\";\nimport SavedOrgsPage from \"./pages/SavedOrgsPage\";\n\nfunction App() {\n  const [result, setResult] = React.useState({});\n  const [suggestions, setSuggestions] = React.useState([]);\n  const [isInputFocused, setIsInputFocused] = React.useState(false);\n  const [savedResults, setSavedResults] = React.useState([]);\n\n  // проверка для фокусировки/блюра инпута и тем самым\n  // показа/скрытия \"подсказок\"\n  React.useEffect(() => {\n    const evtLstn = (evt) => {\n      if (evt.target.classList.contains('orgs__search')\n        || evt.target.classList.contains('suggestion')\n        || evt.target.parentElement.classList.contains('suggestion'))\n      {\n        setIsInputFocused(true);\n      } else {\n        setIsInputFocused(false);\n      }\n    }\n    document.getElementById('app').addEventListener('click', evtLstn);\n    return () => document.getElementById('app').removeEventListener('click', evtLstn);\n  }, [isInputFocused])\n\n  // проверка на сохраненные организации с прошлых сессий\n  React.useEffect(() => {\n    localStorage.getItem('saved') && setSavedResults(JSON.parse(localStorage.getItem('saved')));\n  }, [])\n\n  // запрос к серверу для получения массива Подсказок\n  const fetchSuggestions = (query) => {\n    const url = \"https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/party\";\n    const token = \"2a20a4f21d4938545a386b96e095f8a2c7eb272a\";\n\n    const options = {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        \"Authorization\": \"Token \" + token\n      },\n      body: JSON.stringify({ query: query })\n    }\n\n    fetch(url, options)\n      .then(res => {\n        if (res.ok) {\n          return res.json()\n        } else {\n          return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\n        }\n      })\n      .then(res => setSuggestions(res.suggestions))\n      .catch(error => console.log(\"error\", error));\n  }\n\n\n\n  return (\n    <div className=\"app\" id=\"app\">\n      <Header/>\n\n      <main className=\"main\">\n        <h1 className=\"main__title\">Мои организации</h1>\n\n        <section className=\"main__container\">\n          <NavBar savedResults={savedResults}\n                  setResult={setResult}\n                  setSuggestions={setSuggestions}\n          />\n\n          <Switch>\n            <Route exact path=\"/\">\n              <NewOrgPage fetchSuggestions={fetchSuggestions}\n                          suggestions={suggestions}\n                          setResult={setResult}\n                          setIsInputFocused={setIsInputFocused}\n                          isInputFocused={isInputFocused}\n                          result={result}\n                          setSavedResults={setSavedResults}\n                          savedResults={savedResults}\n              />\n            </Route>\n\n            <Route path=\"/saved\">\n              <SavedOrgsPage savedResults={savedResults}\n                             setSavedResults={setSavedResults}\n              />\n            </Route>\n          </Switch>\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\";\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}